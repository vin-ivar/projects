[paths]
train = "data/train.spacy"
dev = "data/dev.spacy"
init_tok2vec = null
vectors = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "en"
pipeline = ["transformer", "coref"]
batch_size = 2
disabled = []
before_creation = null
after_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[nlp.after_pipeline_creation]
# @callbacks = "spacy.models_with_nvtx_range.v1"
@callbacks = "spacy.models_and_pipes_with_nvtx_range.v1"

[components]

[components.coref]
factory = "experimental_coref"
span_cluster_prefix = "coref_head_clusters"

[components.coref.model]
@architectures = "spacy-experimental.Coref.v1"
distance_embedding_size = 20
dropout = 0.3
hidden_size = 1024
depth = 1
antecedent_limit = 50
antecedent_batch_size = 512

[components.coref.model.tok2vec]
@architectures = "curated-transformers.LastTransformerLayerListener.v1"
width = 768
pooling = {"@layers":"reduce_mean.v1"}
upstream = "*"
grad_factor = 0.5
# @architectures = "spacy-transformers.TransformerListener.v1"
# grad_factor = 0.5
# upstream = "transformer"
# pooling = {"@layers":"reduce_mean.v1"}


[components.coref.scorer]
@scorers = "spacy-experimental.coref_scorer.v1"
span_cluster_prefix = "${components.coref.span_cluster_prefix}"

# [components.transformer]
# factory = "transformer"

# [components.transformer.model]
# @architectures = "spacy-transformers.TransformerModel.v3"
# name = "roberta-base"
# tokenizer_config = {"use_fast": true}

# [components.transformer.model.get_spans]
# @span_getters = "spacy-transformers.strided_spans.v1"
# window = 400
# stride = 350

[components.transformer]
factory = "curated_transformer"

[components.transformer.model]
@architectures = "curated-transformers.RobertaTransformer.v1"
num_hidden_layers = 6
vocab_size = 50265
piece_encoder = {"@architectures": "curated-transformers.ByteBPEEncoder.v1"}

[components.transformer.model.with_spans]
@architectures = "curated-transformers.WithStridedSpans.v1"
stride = 350
window = 400

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
max_length = 0
gold_preproc = false
limit = 0
augmenter = null

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
max_length = 0
gold_preproc = false
limit = 0
augmenter = null

[training]
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.3
accumulate_gradient = 1
patience = 4000
max_epochs = 20
max_steps = 200000
eval_frequency = 4000
frozen_components = []
annotating_components = []
before_to_disk = null

[training.batcher]
@batchers = "spacy.batch_by_sequence.v1"
size = 1
get_length = null

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = true

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = true
eps = 1e-8

[training.optimizer.learn_rate]
@schedules = "warmup_linear.v1"
warmup_steps = 250
total_steps = 20000
initial_rate = 5e-5

[training.score_weights]
coref_f = 1.0
coref_p = 0
coref_r = 0

[pretraining]

[initialize]
vectors = ${paths.vectors}
init_tok2vec = ${paths.init_tok2vec}
vocab_data = null
lookups = null
before_init = null
after_init = null

[initialize.components]

[initialize.tokenizer]

[initialize.components.transformer]

[initialize.components.transformer.encoder_loader]
@model_loaders = "curated-transformers.HFTransformerEncoderLoader.v1"
name = "biu-nlp/f-coref"

[initialize.components.transformer.piecer_loader]
@model_loaders = "curated-transformers.HFPieceEncoderLoader.v1"
name = "biu-nlp/f-coref"
